// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2020-08-11 21:39:25.278833 +0200 CEST m=+3.801390823

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://github.com/gaia-pipeline/gaia/blob/master/LICENSE",
        "contact": {
            "name": "API Support",
            "url": "https://github.com/gaia-pipeline/gaia"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/login": {
            "post": {
                "description": "Returns an authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "User Login",
                "parameters": [
                    {
                        "description": "UserLogin request",
                        "name": "UserLoginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gaia.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gaia.User"
                        }
                    },
                    "400": {
                        "description": "error reading json",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "credentials provided",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "{creating jwt token|signing jwt token}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/pipeline": {
            "post": {
                "description": "Starts creating a pipeline given all the data asynchronously.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "pipelines"
                ],
                "summary": "Create pipeline.",
                "parameters": [
                    {
                        "description": "Create pipeline details",
                        "name": "CreatePipelineRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gaia.CreatePipeline"
                        }
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Failed to bind, validation error and invalid details",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal error while saving create pipeline run",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/pipeline/created": {
            "get": {
                "description": "Get a list of all pipelines which are about to be compiled and which have been compiled.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pipelines"
                ],
                "summary": "Get all create pipelines.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/gaia.CreatePipeline"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error while retrieving create pipeline data.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/pipeline/githook": {
            "post": {
                "description": "This is the global endpoint which will handle all github webhook callbacks.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "pipelines"
                ],
                "summary": "Handle github webhook callbacks.",
                "parameters": [
                    {
                        "description": "A github webhook payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pipelines.Payload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully processed event",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bind error and schedule errors",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Various internal errors running and triggering and rebuilding pipelines. Please check the logs for more information.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/pipeline/gitlsremote": {
            "post": {
                "description": "Checks for available git remote branches which in turn verifies repository access.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pipelines"
                ],
                "summary": "Check for repository access.",
                "parameters": [
                    {
                        "description": "The repository details",
                        "name": "PipelineGitLSRemoteRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gaia.GitRepo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Available branches",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Failed to bind body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "No access",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/pipeline/latest": {
            "get": {
                "description": "Returns the latest of all registered pipelines included with the latest run.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pipelines"
                ],
                "summary": "Returns the latest run.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pipelines.getAllWithLatestRun"
                        }
                    },
                    "500": {
                        "description": "Internal error while getting latest run",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/pipeline/name": {
            "get": {
                "description": "Returns all registered pipelines.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pipelines"
                ],
                "summary": "Returns all registered pipelines.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/gaia.Pipeline"
                            }
                        }
                    }
                }
            }
        },
        "/pipeline/periodicschedules": {
            "post": {
                "description": "Returns the latest of all registered pipelines included with the latest run.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pipelines"
                ],
                "summary": "Returns the latest run.",
                "parameters": [
                    {
                        "description": "A list of valid cronjob specs",
                        "name": "schedules",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bind error and schedule errors",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/pipeline/{pipelineid}": {
            "get": {
                "description": "Get pipeline information based on ID.",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pipelines"
                ],
                "summary": "Get pipeline information.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the pipeline",
                        "name": "pipelineid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gaia.Pipeline"
                        }
                    },
                    "400": {
                        "description": "The given pipeline id is not valid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Pipeline not found with the given id",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a pipeline by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pipelines"
                ],
                "summary": "Update pipeline.",
                "parameters": [
                    {
                        "description": "PipelineUpdate request",
                        "name": "PipelineUpdateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gaia.Pipeline"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pipeline has been updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error while updating the pipeline",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "The pipeline with the given ID was not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal error while updating and building the new pipeline information",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Accepts a pipeline id and deletes it from the store. It also removes the binary inside the pipeline folder.",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "pipelines"
                ],
                "summary": "Delete a pipeline.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the pipeline.",
                        "name": "pipelineid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pipeline has been deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error while deleting the pipeline",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "The pipeline with the given ID was not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal error while deleting and removing the pipeline from store and disk",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/pipeline/{pipelineid}/pull": {
            "post": {
                "description": "Pull new code using the repository of the pipeline.",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "pipelines"
                ],
                "summary": "Update the underlying repository of the pipeline.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the pipeline.",
                        "name": "pipelineid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/pipeline/{pipelineid}/reset-trigger-token": {
            "put": {
                "description": "Generates a new remote trigger token for a given pipeline.",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "pipelines"
                ],
                "summary": "Reset trigger token.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the pipeline.",
                        "name": "pipelineid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trigger successful for pipeline: {pipelinename}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid pipeline id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Pipeline not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal storage error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/pipeline/{pipelineid}/start": {
            "post": {
                "description": "Starts a pipeline with a given ID and arguments for that pipeline and returns created/scheduled status.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pipelines"
                ],
                "summary": "Start a pipeline.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the pipeline.",
                        "name": "pipelineid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Optional arguments of the pipeline.",
                        "name": "args",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/gaia.Argument"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gaia.PipelineRun"
                        }
                    },
                    "400": {
                        "description": "Various failures regarding starting the pipeline like: invalid id, invalid docker value and schedule errors",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Pipeline not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/pipeline/{pipelineid}/{pipelinetoken}/trigger": {
            "post": {
                "security": [
                    {
                        "": []
                    }
                ],
                "description": "Using a trigger token, start a pipeline run. This endpoint does not require authentication.",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "pipelines"
                ],
                "summary": "Trigger a pipeline.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the pipeline.",
                        "name": "pipelineid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The trigger token for this pipeline.",
                        "name": "pipelinetoken",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trigger successful for pipeline: {pipelinename}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error while triggering pipeline",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Invalid trigger token",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user": {
            "post": {
                "description": "Adds a new user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Add user.",
                "parameters": [
                    {
                        "description": "UserAdd request",
                        "name": "UserAddRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gaia.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User has been added",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters given for add user request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "{User put failed|User permission put error}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/password": {
            "post": {
                "description": "Changes the password of the given user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Change password for user.",
                "parameters": [
                    {
                        "description": "UserChangePassword request",
                        "name": "UserChangePasswordRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.changePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{Invalid parameters given for password change request|Cannot find user with the given username|New password does not match new password confirmation}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "412": {
                        "description": "Precondition Failed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/{username}/delete": {
            "delete": {
                "description": "Delete a given user.",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete user.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The username to delete",
                        "name": "username",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{Invalid username given|Auto user cannot be deleted}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "{User not found|Permission not found|Rbac not found}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/{username}/permissions": {
            "get": {
                "description": "Get permissions of the user.",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get permission of the user.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The username to get permission for",
                        "name": "username",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gaia.UserPermission"
                        }
                    },
                    "400": {
                        "description": "Failed to get permission",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Adds or updates permissions for a user..",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Adds or updates permissions for a user.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The username to get permission for",
                        "name": "username",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permissions have been updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{Invalid parameters given for request|Permissions put failed}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/{username}/reset-trigger-token": {
            "put": {
                "description": "Generates and saves a new remote trigger token for a given user.",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Generate new remote trigger token.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The username to reset the token for",
                        "name": "username",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{Invalid username given|Only auto user can have a token reset|User not found|Error retrieving user}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns a list of registered users.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/gaia.User"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "gaia.Argument": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "gaia.CreatePipeline": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "githubtoken": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "output": {
                    "type": "string"
                },
                "pipeline": {
                    "type": "object",
                    "$ref": "#/definitions/gaia.Pipeline"
                },
                "status": {
                    "type": "integer"
                },
                "statustype": {
                    "type": "string"
                }
            }
        },
        "gaia.GitRepo": {
            "type": "object",
            "properties": {
                "branches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "password": {
                    "type": "string"
                },
                "privatekey": {
                    "type": "object",
                    "$ref": "#/definitions/gaia.PrivateKey"
                },
                "selectedbranch": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "gaia.Job": {
            "type": "object",
            "properties": {
                "args": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gaia.Argument"
                    }
                },
                "dependson": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gaia.Job"
                    }
                },
                "desc": {
                    "type": "string"
                },
                "failpipeline": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "gaia.Pipeline": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "docker": {
                    "type": "boolean"
                },
                "execpath": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "jobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gaia.Job"
                    }
                },
                "name": {
                    "type": "string"
                },
                "notvalid": {
                    "type": "boolean"
                },
                "periodicschedules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repo": {
                    "type": "object",
                    "$ref": "#/definitions/gaia.GitRepo"
                },
                "sha256sum": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "trigger_token": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "gaia.PipelineRun": {
            "type": "object",
            "properties": {
                "docker": {
                    "type": "boolean"
                },
                "dockerworkerid": {
                    "type": "string"
                },
                "finishdate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "jobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gaia.Job"
                    }
                },
                "pipelineid": {
                    "type": "integer"
                },
                "pipelinetags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pipelinetype": {
                    "type": "string"
                },
                "scheduledate": {
                    "type": "string"
                },
                "startdate": {
                    "type": "string"
                },
                "started_reason": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "uniqueid": {
                    "type": "string"
                }
            }
        },
        "gaia.PrivateKey": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "gaia.User": {
            "type": "object",
            "properties": {
                "display_name": {
                    "type": "string"
                },
                "jwtexpiry": {
                    "type": "integer"
                },
                "lastlogin": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "tokenstring": {
                    "type": "string"
                },
                "trigger_token": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "gaia.UserPermission": {
            "type": "object",
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "pipelines.Payload": {
            "type": "object",
            "properties": {
                "repository": {
                    "type": "object",
                    "$ref": "#/definitions/pipelines.Repository"
                }
            }
        },
        "pipelines.Repository": {
            "type": "object",
            "properties": {
                "git_url": {
                    "type": "string"
                },
                "html_url": {
                    "type": "string"
                },
                "ssh_url": {
                    "type": "string"
                }
            }
        },
        "pipelines.getAllWithLatestRun": {
            "type": "object",
            "properties": {
                "p": {
                    "type": "object",
                    "$ref": "#/definitions/gaia.Pipeline"
                },
                "r": {
                    "type": "object",
                    "$ref": "#/definitions/gaia.PipelineRun"
                }
            }
        },
        "user.changePasswordRequest": {
            "type": "object",
            "properties": {
                "newpassword": {
                    "type": "string"
                },
                "newpasswordconf": {
                    "type": "string"
                },
                "oldpassword": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "gaia-pipeline.io",
	BasePath:    "/api/v1",
	Schemes:     []string{},
	Title:       "Gaia API",
	Description: "This is the API that the Gaia Admin UI uses.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
